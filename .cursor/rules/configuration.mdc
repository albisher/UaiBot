---
description: 
globs: 
alwaysApply: false
---
- AI Model Configuration:
  * Support multiple AI providers (Ollama, Google, ..etc)
  * Allow easy model switching via environment variables
  * Keep model-specific settings isolated in settings.json
  * Support model-specific parameters through environment variables
  * Allow runtime model selection via AI_PROVIDER
  * Document model configuration options in settings.json

- Global Configuration:
  * Use settings.json for global settings
  * Support environment variable overrides with ${VAR:-default} syntax
  * Follow the configuration structure in settings.json
  * Document all configuration options in settings.json
  * Implement proper validation for all settings
  * Keep sensitive information secure (API keys via environment variables)

- Model Settings:
  * Default: Ollama with gemma3:4b
  * Support Google models (gemini-pro)
  * Configure via OLLAMA_MODEL and GOOGLE_MODEL
  * Allow easy model switching via environment variables
  * Keep model settings isolated in settings.json
  * Document model requirements and configuration

- Environment Variables:
  * GOOGLE_API_KEY: Required for Google AI services
  * OLLAMA_BASE_URL: Ollama server URL (default: http://localhost:11434)
  * OLLAMA_MODEL: Model name for Ollama (default: gemma3:4b)
  * GOOGLE_MODEL: Model name for Google (default: gemini-pro)
  * AI_PROVIDER: Service provider selection (default: ollama)
  * LOG_LEVEL: Logging verbosity (default: INFO)
  * LOG_FILE: Log file location (default: log/uaibot.log)

- Configuration Loading:
  * Load defaults first
  * Override with file settings
  * Override with environment variables
  * Validate final configuration
  * Log configuration changes
  * Handle missing values gracefully

- Security Rules:
  * Never store sensitive data in files
  * Use environment variables for secrets
  * Validate all configuration values
  * Log configuration changes
  * Implement access controls
  * Follow security best practices
