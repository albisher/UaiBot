{
  "english": {
    "passed": 0,
    "failed": 0,
    "details": []
  },
  "arabic": {
    "passed": 4,
    "failed": 2,
    "details": [
      {
        "name": "Create file (AR)",
        "command": "أنشئ ملف جديد باسم test_output_ar.txt واكتب فيه 'هذا ملف اختبار'",
        "returncode": 0,
        "succeeded": true,
        "reason": "File creation confirmed",
        "stdout": "Using Ollama model: gemma3:1b\nOllama initialized successfully\n\nFile Write Request:\n  Filename: test_output_ar.txt\n  Content: \"هذا ملف اختبار\"\n  Mode: Overwrite\n  Command: echo 'هذا ملف اختبار' > test_output_ar.txt\n\nUsing shell=True for command with special syntax: echo 'هذا ملف اختبار' > test_output_ar.txt\nExecuting with shell=True: echo 'هذا ملف اختبار' > test_output_ar.txt\n\u001b[38;5;244m🤔 Thinking...\n┌───────────────────────────────────────────────┐\n│ Processing file write/append request...       │\n│ Analyzing to extract the filename, content, and write mode... │\n│ Checking if this is an append or overwrite operation... │\n└───────────────────────────────────────────────┘\u001b[0m\n\n\u001b[38;5;34m✅ Wrote content to file 'test_output_ar.txt':\u001b[0m\n\u001b[1;38;5;33m📝 Content:\u001b[0m \"هذا ملف اختبار\"",
        "stderr": ""
      },
      {
        "name": "Read file (AR)",
        "command": "اعرض محتوى الملف test_output_ar.txt",
        "returncode": 0,
        "succeeded": true,
        "reason": "File content found",
        "stdout": "Using Ollama model: gemma3:1b\nOllama initialized successfully\nExecuting with shlex: ['cat', 'test_output_ar.txt']\n\u001b[38;5;244m🤔 Thinking...\n┌───────────────────────────────────────────────┐\n│ 🤖 Processing your request: 'اعرض محتوى الملف test_output_ar.txt' │\n│                                               │\n│ I'm thinking about how to best handle this... │\n│ Analyzing the intent of your request...       │\n│ Checking if I can map this to a system command... │\n└───────────────────────────────────────────────┘\u001b[0m\n\n\u001b[1;38;5;33m📌 I'll execute this command:\u001b[0m cat test_output_ar.txt\n\n\u001b[38;5;34m✅ Result:\u001b[0m\nهذا ملف اختبار",
        "stderr": ""
      },
      {
        "name": "List files (AR)",
        "command": "اعرض جميع الملفات في المجلد الحالي",
        "returncode": 0,
        "succeeded": false,
        "reason": "No file content found",
        "stdout": "Using Ollama model: gemma3:1b\nOllama initialized successfully\nExecuting with shlex: ['ls', '-l']\n\u001b[38;5;244m🤔 Thinking...\n┌───────────────────────────────────────────────┐\n│ 🤖 Processing your request: 'اعرض جميع الملفات في المجلد الحالي' │\n│                                               │\n│ I'm thinking about how to best handle this... │\n│ Analyzing the intent of your request...       │\n│ Checking if I can map this to a system command... │\n└───────────────────────────────────────────────┘\u001b[0m\n\n\u001b[1;38;5;33m📌 I'll execute this command:\u001b[0m ls -l\n\n\u001b[38;5;34m✅ Result:\u001b[0m\ntotal 244\ndrwxrwxr-x 2 a a  4096 May 15 11:20 audio\ndrwxrwxr-x 7 a a  4096 May 19 12:58 backup\ndrwxrwxr-x 3 a a  4096 May 20 08:24 command_processor\n-rw-rw-r-- 1 a a     0 May 20 07:01 command_processor.py\n-rw-rw-r-- 1 a a  2870 May 18 06:58 COMMERCIAL_LICENSE\ndrwxrwxr-x 2 a a  4096 May 20 08:31 config\ndrwxrwxr-x 3 a a  4096 May 20 07:01 core\n-rw-rw-r-- 1 a a    28 May 20 07:01 custom_note.txt\ndrwxrwxr-x 3 a a  4096 May 19 12:50 demo\ndrwxrwxr-x 3 a a  4096 May 18 06:59 device_manager\ndrwxrwxr-x 2 a a  4096 May 20 11:06 docs\ndrwxrwxr-x 3 a a  4096 May 20 07:01 examples\ndrwxrwxr-x 2 a a  4096 May 20 07:01 findings\ndrwxrwxr-x 2 a a  4096 May 20 11:16 fix\ndrwxrwxr-x 4 a a  4096 May 20 07:32 gui\n-rw-rw-r-- 1 a a   183 May 18 06:58 __init__.py\ndrwxrwxr-x 3 a a  4096 May 19 12:57 input_control\n-rw-rw-r-- 1 a a  2714 May 18 07:40 LICENSE\n-rw-rw-r-- 1 a a   378 May 18 06:58 license_key.json.template\ndrwxrwxr-x 2 a a  4096 May 20 08:38 log\ndrwxrwxr-x 2 a a  4096 May 20 07:32 logs\n-rwxrwxr-x 1 a a 37980 May 20 10:58 main.py\ndrwxrwxr-x 2 a a  4096 May 20 07:01 master\ndrwxrwxr-x 8 a a  4096 May 19 12:57 platform_uai\ndrwxrwxr-x 2 a a  4096 May 18 11:54 __pycache__\n-rw-rw-r-- 1 a a  3688 May 20 07:09 README.md\n-rw-rw-r-- 1 a a  4720 May 18 06:58 README.md.new\ndrwxrwxr-x 2 a a  4096 May 19 07:45 reference\n-rw-rw-r-- 1 a a  2129 May 20 07:04 requirements.txt\ndrwxrwxr-x 3 a a  4096 May 20 07:01 screen_handler\ndrwxrwxr-x 2 a a  4096 May 18 06:58 src\n-rwxrwxr-x 1 a a  2208 May 18 06:58 start_uaibot.py\ndrwxrwxr-x 3 a a  4096 May 20 07:01 terminal_commands\ndrwxrwxr-x 6 a a  4096 May 20 07:42 test_files\n-rw-rw-r-- 1 a a    27 May 20 11:18 test_output_ar.txt\ndrwxrwxr-x 7 a a  4096 May 20 11:07 tests\ndrwxrwxr-x 2 a a  4096 May 20 11:16 todo\n-rw-rw-r-- 1 a a 42568 May 19 13:22 uaibot.log\ndrwxrwxr-x 2 a a  4096 May 19 06:13 usb\ndrwxrwxr-x 2 a a  4096 May 18 06:58 usb_handler\ndrwxrwxr-x 3 a a  4096 May 20 07:01 utils",
        "stderr": ""
      },
      {
        "name": "System info (AR)",
        "command": "ما هو نظام التشغيل الذي أستخدمه؟",
        "returncode": 0,
        "succeeded": true,
        "reason": "OS information found",
        "stdout": "Using Ollama model: gemma3:1b\nOllama initialized successfully\nExecuting with shlex: ['cat', '/etc/os-release']\n\u001b[38;5;244m🤔 Thinking...\n┌───────────────────────────────────────────────┐\n│ 🤖 Processing your request: 'ما هو نظام التشغيل الذي أستخدمه؟' │\n│                                               │\n│ I'm thinking about how to best handle this... │\n│ Analyzing the intent of your request...       │\n│ Checking if I can map this to a system command... │\n└───────────────────────────────────────────────┘\u001b[0m\n\n\u001b[1;38;5;33m📌 I'll execute this command:\u001b[0m cat /etc/os-release\n\n\u001b[38;5;34m✅ Result:\u001b[0m\nPRETTY_NAME=\"Ubuntu 24.04.2 LTS\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"24.04\"\nVERSION=\"24.04.2 LTS (Noble Numbat)\"\nVERSION_CODENAME=noble\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=noble\nLOGO=ubuntu-logo",
        "stderr": ""
      },
      {
        "name": "Disk space (AR)",
        "command": "أظهر المساحة المتاحة على القرص",
        "returncode": 0,
        "succeeded": true,
        "reason": "Available space mentioned",
        "stdout": "Using Ollama model: gemma3:1b\nOllama initialized successfully\nExecuting with shlex: ['df', '-h']\n\u001b[38;5;244m🤔 Thinking...\n┌───────────────────────────────────────────────┐\n│ 🤖 Processing your request: 'أظهر المساحة المتاحة على القرص' │\n│                                               │\n│ I'm thinking about how to best handle this... │\n│ Analyzing the intent of your request...       │\n│ Checking if I can map this to a system command... │\n└───────────────────────────────────────────────┘\u001b[0m\n\n\u001b[1;38;5;33m📌 I'll execute this command:\u001b[0m df -h\n\n\u001b[38;5;34m✅ Result:\u001b[0m\nFilesystem      Size  Used Avail Use% Mounted on\ntmpfs           1.6G  2.6M  1.6G   1% /run\n/dev/nvme0n1p2  468G  354G   91G  80% /\ntmpfs           7.7G  144M  7.6G   2% /dev/shm\ntmpfs           5.0M  8.0K  5.0M   1% /run/lock\nefivarfs        438K  217K  217K  51% /sys/firmware/efi/efivars\ntmpfs           7.7G     0  7.7G   0% /run/qemu\n/dev/nvme0n1p1  1.1G   50M 1023M   5% /boot/efi\ntmpfs           1.6G  164K  1.6G   1% /run/user/1000",
        "stderr": ""
      },
      {
        "name": "Delete file (AR)",
        "command": "احذف الملف test_output_ar.txt",
        "returncode": 1,
        "succeeded": false,
        "reason": "Empty output",
        "stdout": "",
        "stderr": "Command timed out after 30 seconds"
      }
    ]
  }
}